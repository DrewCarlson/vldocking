#summary One-sentence summary of this page.

<h1>Lesson 12 : Anchored dockables</h1>
<p>
This is the 12th part of the VLDocking Framework for Java Swing applications.
<p> 
This short lesson covers the topic of Anchored dockables (dockables with a limited set of movements alloweds, sticking to one or more borders)

<p>
<ul>
	<li> <a href="index.php">
	Back to table of contents</a></li>
</ul>

<p>
Note : this lesson will be enhanced in the coming days...



<p>
<h2>Overview</h2>
<p>
<img src="/images/buttons/v2.1.jpg" title="new feature from VLDocking 2.1">
Anchored dockables are Dockable that remain at given positions on their desktop and that can prevent other dockable to be moved between them and their anchored border.
<p>
Anchors are specified in terms of borders : Top, Left, Bottom, Right.
<p>
For example, to have a dockable anchored at the bottom of its desktop, taking the full width of it, the anchors to use should be LEFT + BOTTOM + RIGHT.

<h2>Usage</h2>
<p>
To activate anchoring, use the AnchorManager like this :
<p>
<div class="example">
<pre>
DockingDesktop desk = ...;
Dockable dockable1 = ...;
// create an anchor manager for a given context and a top level container (here : the desktop)
AnchorManager am = new AnchorManager(desk.getContext(), desk);
// and specify constraints (here : top + right)
AnchorConstraints constraints = 
     new AnchorConstraints(AnchorConstraints.ANCHOR_RIGHT|AnchorConstraints.ANCHOR_TOP); 
am.putDockableContraints(dockable1, constraints);
// and that's it, the top right corner of your desktop is now reserved to "dockable1".
</pre>
</div>
<p>
The two object to understand here are <code>AnchorManager</code> and <code>AnchorConstraints</code>.
<p>
<h3>AnchorManager</h3>
<p>
The AnchorManager is responsible of the constraints enforcement for a given container 
(usually a DockingDesktop, but it could also be used with a CompoundDockableContainer).
<p>
It works as a DockingActionEvent listener, and analyses (and vetoes) the actions coming from 
Drag and Drop gestures.
<p>
<h3>AnchorConstraints</h3>
<p>
This object represent an anchor constraint.
<p> 
A constraint is expressed by a logical OR between the following fields
<code>
  AnchorConstraints.ANCHOR_TOP
  AnchorConstraints.ANCHOR_LEFT
  AnchorConstraints.ANCHOR_BOTTOM
  AnchorConstraints.ANCHOR_RIGHT
</code>
<p>
To specify a dockable spread along a full side of the container, you have to OR the fields 
corresponding to this side, and the two adjacents sides.
<p> Examples
<div class="example">
<pre>
  // top left corner :
  AnchorConstraints topLeft = new AnchorConstraints(
  	 AnchorConstraints.ANCHOR_TOP
	|AnchorConstraint.ANCHOR_LEFT)
  
  // full top side :
  AnchorConstraints fullTop = new AnchorConstraints(
  	 AnchorConstraints.ANCHOR_TOP                      // side
	|AnchorConstraint.ANCHOR_LEFT  			   // and borders
	|AnchorConstaints.RIGHT)
  
  // always on the left, but not taking full height :
  AnchorConstraints left = new AnchorConstraints(
  	 AnchorConstraint.ANCHOR_LEFT );
	   
</pre>
</div>
<p>

<h2>The End </h2>
<p> And this is the end of the tutorial !
<p>
Feel free to contact us if you are having any trouble getting started with VLDocking, or 
with a specific feature of the framework. 
<p> You can join us at <a href="mailto:support@vlsolutions.com">support@vlsolutions.com</a>
 or post directly your questions/remarks on our <a href="/en/forum/index.php"> online forum</a> 
 (java web start application).