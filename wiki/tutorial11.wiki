#summary One-sentence summary of this page.

<h1>Lesson 11 : Multi-desktop applications</h1>
<p>
This is the 11th part of the VLDocking Framework for Java Swing applications.
<p> 
This lesson covers the topic of Multiple Desktop applications (applications that are made of many docking desktops sharing a common set of dockables)

<p>
<ul>
	<li> <a href="index.php">
	Back to table of contents</a></li>
</ul>

<p>
Note : this lesson will be enhanced in the coming days...



<p>
<h2>Overview</h2>
<p>
<img src="/images/buttons/v2.1.jpg" title="new feature from VLDocking 2.1">
Sharing dockables across Docking Desktops is a new feature provided by VLDocking 2.1
<p>
To support this, a new class had to be introduced : the <code>DockingContext</code>.
<p>
Two (or more) desktops sharing the same context can exchange dockables with drag and drop gestures, as if they were parts of the same hierarchy.

<p align="center">
<img src="/images/tutorial/multipleDesktops.jpg"><br>
Two destops, sharing their dockables
</p>
<p>
It is also possible to have two desktop with different contexts. In that case, Drag and 
Drop between these desktops will be ignored.

<h2>Usage</h2>
<p>
To enable context sharing is easy : just use the new DockingDesktop constructors : 
<div class="example">
<p>
Example : 
<pre>
DockingDesktop desk1 = new DockingDesktop("desktop one");
DockingContext sharedContext = desk1.getDockingContext();
DockingDesktop desk2 = new DockingDesktop("desktop two", sharedContext);
// and that's it ! Now desk1 and desk2 can share their dockables.
</pre>
</div>

<h2>Remarks</h2>
<p>
Loading and saving desktops are now forwarded to the DockingContext. This means you j
ust have to call readXML()/writeXML() once per context (i.e., not per desktop).
<p>
There are two ways to acheive this : 
<ul>
<li> Select a desktop, and invoke readXML() / writeXML() from it.</li>
<li> Get the DockingContext from one of the desktops (desk.getDockingContext()), and then 
invoke the readXML() and writeXML() methods from there.</li>
</ul>
<p>
In the case of an application with two or more contexts (i.e. independant desktops), 
the readXML() and writeXML() method have to be invoked on each set of desktops (on each context).
<p>

